{"version":3,"file":"static/js/170.ba2a379d.chunk.js","mappings":"kRAGaA,EAAwBC,EAAAA,GAAAA,IAAH,6DAIrBC,EAAqBD,EAAAA,GAAAA,IAAH,0CAGlBE,EAAeF,EAAAA,GAAAA,IAAH,2CAGZG,EAAoBH,EAAAA,GAAAA,IAAH,2FAKjBI,EAAeJ,EAAAA,GAAAA,EAAH,iEAIZK,EAAWL,EAAAA,GAAAA,KAAH,iEAIRM,EAAYN,EAAAA,GAAAA,IAAH,oIAOTO,EAAYP,EAAAA,GAAAA,EAAH,8CAGTQ,GAAWR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,6RAeRU,GAAeV,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,mT,2BCsCzB,EAtEqB,WAAO,IAAD,IACjBW,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBZ,GAFrB,OAEXG,EAFW,OAGjBC,EAAWD,GAHM,gDAKjBU,QAAQC,IAAR,MALiB,yDAAH,qDAQlBH,GACD,GAAE,CAACX,IACJ,IAAQe,EAA+CZ,EAA/CY,MAAOC,EAAwCb,EAAxCa,SAAUC,EAA8Bd,EAA9Bc,aAAcC,EAAgBf,EAAhBe,YACvC,OACE,UAAC9B,EAAD,YACE,SAACS,EAAD,CAAUsB,GAAIZ,EAAd,sBACA,UAACjB,EAAD,YACE,SAACC,EAAD,UACGY,IACC,gBACEiB,IAAG,0CAAqCF,GACxCG,IAAI,cAIV,UAAC7B,EAAD,YACE,wBAAKuB,KACL,UAACtB,EAAD,yBACY,SAACC,EAAD,UAAWsB,QAEvB,UAACvB,EAAD,6BACgB,SAACC,EAAD,UAAWuB,QAE3B,UAACtB,EAAD,qBAEGQ,GACCA,EAAQmB,OAAOC,KAAI,SAAAC,GACjB,IAAQC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,KACZ,OACE,SAAC9B,EAAD,WACE,SAACF,EAAD,UAAWgC,KADGD,EAInB,cAIT,4BACE,oDACA,SAAC1B,EAAD,CAAcoB,GAAE,UAAaX,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAA3D,sBAGA,SAACV,EAAD,CAAcoB,GAAE,UAAaX,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAA3D,sBAIF,SAAC,EAAAkB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailsContainer = styled.div`\n  display: block;\n  padding: 20px;\n`;\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n`;\nexport const ImageWrapper = styled.div`\n  display: block;\n`;\nexport const MainInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n`;\nexport const MainInfoText = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;\nexport const InfoSpan = styled.span`\n  font-size: 16px;\n  font-weight: 400;\n`;\nexport const GenreInfo = styled.div`\n  display: flex;\n  text-align: center;\n  align-items: baseline;\n  font-size: 20px;\n  font-weight: 500;\n`;\nexport const GenreSpan = styled.p`\n  margin-right: 5px;\n`;\nexport const BackLink = styled(NavLink)`\n  display: inline-block;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  margin-bottom: 10px;\n  background-color: #a6efa6;\n\n  &.active {\n    color: white;\n    background-color: #ff5100;\n  }\n`;\nexport const NextInfoLink = styled(NavLink)`\n  display: inline-block;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  margin-bottom: 10px;\n  background-color: #a6efa6;\n  margin-right: 5px;\n\n  &.active {\n    color: white;\n    background-color: #ff5100;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport {\n  MovieDetailsContainer,\n  MovieInfoContainer,\n  ImageWrapper,\n  MainInfoContainer,\n  MainInfoText,\n  InfoSpan,\n  GenreInfo,\n  BackLink,\n  NextInfoLink,\n  GenreSpan,\n} from './MovieDetails.styled';\n\nimport { useState, useEffect, Suspense } from 'react';\n\nimport { getMovieDetails } from '../../services/api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [details, setDetails] = useState('');\n\n  const location = useLocation();\n\n  const BackLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const handleEffect = async () => {\n      try {\n        const details = await getMovieDetails(movieId);\n        setDetails(details);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    handleEffect();\n  }, [movieId]);\n  const { title, overview, vote_average, poster_path } = details;\n  return (\n    <MovieDetailsContainer>\n      <BackLink to={BackLinkHref}>Go back</BackLink>\n      <MovieInfoContainer>\n        <ImageWrapper>\n          {details && (\n            <img\n              src={` https://image.tmdb.org/t/p/w200${poster_path}`}\n              alt=\"poster\"\n            ></img>\n          )}\n        </ImageWrapper>\n        <MainInfoContainer>\n          <h2>{title}</h2>\n          <MainInfoText>\n            Overview: <InfoSpan>{overview}</InfoSpan>\n          </MainInfoText>\n          <MainInfoText>\n            vote_average: <InfoSpan>{vote_average}</InfoSpan>\n          </MainInfoText>\n          <GenreInfo>\n            Genres:\n            {details &&\n              details.genres.map(genre => {\n                const { id, name } = genre;\n                return (\n                  <GenreSpan key={id}>\n                    <InfoSpan>{name}</InfoSpan>\n                  </GenreSpan>\n                );\n              })}\n          </GenreInfo>\n        </MainInfoContainer>\n      </MovieInfoContainer>\n      <div>\n        <h3>Additional Information</h3>\n        <NextInfoLink to={`rewievs`} state={{ from: location.state.from }}>\n          Rewievs\n        </NextInfoLink>\n        <NextInfoLink to={`credits`} state={{ from: location.state.from }}>\n          Cast\n        </NextInfoLink>\n      </div>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsContainer>\n  );\n};\nexport default MovieDetails;\n"],"names":["MovieDetailsContainer","styled","MovieInfoContainer","ImageWrapper","MainInfoContainer","MainInfoText","InfoSpan","GenreInfo","GenreSpan","BackLink","NavLink","NextInfoLink","movieId","useParams","useState","details","setDetails","location","useLocation","BackLinkHref","state","from","useEffect","handleEffect","getMovieDetails","console","log","title","overview","vote_average","poster_path","to","src","alt","genres","map","genre","id","name","Suspense","fallback"],"sourceRoot":""}