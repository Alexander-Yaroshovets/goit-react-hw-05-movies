{"version":3,"file":"static/js/838.586bd319.chunk.js","mappings":"kOA4CA,UAtCqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEKC,EAAAA,EAAAA,IAAgBT,GAFrB,OAEXU,EAFW,OAGXC,EAAeD,EAAQE,QAC7BR,GAAW,OAAIO,IAJE,gDAMjBE,QAAQC,IAAR,MANiB,yDAAH,qDAUlBN,GACD,GAAE,CAACR,IAEmB,IAAnBG,EAAQY,QACH,gEAGL,yBACGZ,EAAQa,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACE,iBAAcC,MAAO,CAAEC,KAAMjB,GAA7B,WACE,wBAAKc,KACL,uBAAIC,MAFIF,EAKb,KAIR,C","sources":["components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import { useLocation, useParams } from 'react-router-dom';\n\nimport { useState, useEffect } from 'react';\n\nimport { getMovieReviews } from '../../services/api';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const handleEffect = async () => {\n      try {\n        const credits = await getMovieReviews(movieId);\n        const creditsArrey = credits.results;\n        setReviews([...creditsArrey]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    handleEffect();\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <h3>there is no reviews for this movie</h3>;\n  } else {\n    return (\n      <div>\n        {reviews.map(review => {\n          const { id, author, content } = review;\n          return (\n            <div key={id} state={{ from: location }}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n};\n\nexport default MovieReviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","location","useLocation","useEffect","handleEffect","getMovieReviews","credits","creditsArrey","results","console","log","length","map","review","id","author","content","state","from"],"sourceRoot":""}